// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SyncMsgResp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SyncMsgResp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_SyncMsgResp_2eproto() {
  delete SyncMsgRespInner::default_instance_;
  delete InstantMessage::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_SyncMsgResp_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_SyncMsgResp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  SyncMsgRespInner::default_instance_ = new SyncMsgRespInner();
  InstantMessage::default_instance_ = new InstantMessage();
  SyncMsgRespInner::default_instance_->InitAsDefaultInstance();
  InstantMessage::default_instance_->InitAsDefaultInstance();
  ::yuntongxun_google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SyncMsgResp_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_SyncMsgResp_2eproto_once_);
void protobuf_AddDesc_SyncMsgResp_2eproto() {
  ::yuntongxun_google::protobuf::GoogleOnceInit(&protobuf_AddDesc_SyncMsgResp_2eproto_once_,
                 &protobuf_AddDesc_SyncMsgResp_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SyncMsgResp_2eproto {
  StaticDescriptorInitializer_SyncMsgResp_2eproto() {
    protobuf_AddDesc_SyncMsgResp_2eproto();
  }
} static_descriptor_initializer_SyncMsgResp_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int SyncMsgRespInner::kSyncMessagesFieldNumber;
#endif  // !_MSC_VER

SyncMsgRespInner::SyncMsgRespInner()
  : ::yuntongxun_google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SyncMsgRespInner)
}

void SyncMsgRespInner::InitAsDefaultInstance() {
}

SyncMsgRespInner::SyncMsgRespInner(const SyncMsgRespInner& from)
  : ::yuntongxun_google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SyncMsgRespInner)
}

void SyncMsgRespInner::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncMsgRespInner::~SyncMsgRespInner() {
  // @@protoc_insertion_point(destructor:SyncMsgRespInner)
  SharedDtor();
}

void SyncMsgRespInner::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SyncMsgRespInner::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SyncMsgRespInner& SyncMsgRespInner::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_SyncMsgResp_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_SyncMsgResp_2eproto();
#endif
  return *default_instance_;
}

SyncMsgRespInner* SyncMsgRespInner::default_instance_ = NULL;

SyncMsgRespInner* SyncMsgRespInner::New() const {
  return new SyncMsgRespInner;
}

void SyncMsgRespInner::Clear() {
  syncmessages_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool SyncMsgRespInner::MergePartialFromCodedStream(
    ::yuntongxun_google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::yuntongxun_google::protobuf::uint32 tag;
  ::yuntongxun_google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::yuntongxun_google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:SyncMsgRespInner)
  for (;;) {
    ::std::pair< ::yuntongxun_google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::yuntongxun_google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InstantMessage syncMessages = 1;
      case 1: {
        if (tag == 10) {
         parse_syncMessages:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_syncmessages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_syncMessages;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::yuntongxun_google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::yuntongxun_google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SyncMsgRespInner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SyncMsgRespInner)
  return false;
#undef DO_
}

void SyncMsgRespInner::SerializeWithCachedSizes(
    ::yuntongxun_google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SyncMsgRespInner)
  // repeated .InstantMessage syncMessages = 1;
  for (int i = 0; i < this->syncmessages_size(); i++) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->syncmessages(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:SyncMsgRespInner)
}

int SyncMsgRespInner::ByteSize() const {
  int total_size = 0;

  // repeated .InstantMessage syncMessages = 1;
  total_size += 1 * this->syncmessages_size();
  for (int i = 0; i < this->syncmessages_size(); i++) {
    total_size +=
      ::yuntongxun_google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->syncmessages(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMsgRespInner::CheckTypeAndMergeFrom(
    const ::yuntongxun_google::protobuf::MessageLite& from) {
  MergeFrom(*::yuntongxun_google::protobuf::down_cast<const SyncMsgRespInner*>(&from));
}

void SyncMsgRespInner::MergeFrom(const SyncMsgRespInner& from) {
  GOOGLE_CHECK_NE(&from, this);
  syncmessages_.MergeFrom(from.syncmessages_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SyncMsgRespInner::CopyFrom(const SyncMsgRespInner& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMsgRespInner::IsInitialized() const {

  return true;
}

void SyncMsgRespInner::Swap(SyncMsgRespInner* other) {
  if (other != this) {
    syncmessages_.Swap(&other->syncmessages_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string SyncMsgRespInner::GetTypeName() const {
  return "SyncMsgRespInner";
}


// ===================================================================

#ifndef _MSC_VER
const int InstantMessage::kVersionFieldNumber;
const int InstantMessage::kMsgTypeFieldNumber;
const int InstantMessage::kMsgIdFieldNumber;
const int InstantMessage::kMsgContentFieldNumber;
const int InstantMessage::kMsgSenderFieldNumber;
const int InstantMessage::kMsgReceiverFieldNumber;
const int InstantMessage::kMsgDomainFieldNumber;
const int InstantMessage::kMsgFileNameFieldNumber;
const int InstantMessage::kMsgFileUrlFieldNumber;
const int InstantMessage::kMsgDateCreatedFieldNumber;
const int InstantMessage::kMsgCompressLenFieldNumber;
const int InstantMessage::kMsgDataFieldNumber;
const int InstantMessage::kMcmEventFieldNumber;
const int InstantMessage::kMsgFileSizeFieldNumber;
const int InstantMessage::kExtOptsFieldNumber;
const int InstantMessage::kSenderNickNameFieldNumber;
#endif  // !_MSC_VER

InstantMessage::InstantMessage()
  : ::yuntongxun_google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InstantMessage)
}

void InstantMessage::InitAsDefaultInstance() {
}

InstantMessage::InstantMessage(const InstantMessage& from)
  : ::yuntongxun_google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InstantMessage)
}

void InstantMessage::SharedCtor() {
  ::yuntongxun_google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_ = GOOGLE_ULONGLONG(0);
  msgtype_ = 0u;
  msgid_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgcontent_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgsender_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgreceiver_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdomain_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgfilename_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgfileurl_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdatecreated_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgcompresslen_ = 0u;
  msgdata_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  mcmevent_ = 0u;
  msgfilesize_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  extopts_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendernickname_ = const_cast< ::std::string*>(&::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InstantMessage::~InstantMessage() {
  // @@protoc_insertion_point(destructor:InstantMessage)
  SharedDtor();
}

void InstantMessage::SharedDtor() {
  if (msgid_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgid_;
  }
  if (msgcontent_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgcontent_;
  }
  if (msgsender_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgsender_;
  }
  if (msgreceiver_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgreceiver_;
  }
  if (msgdomain_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgdomain_;
  }
  if (msgfilename_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgfilename_;
  }
  if (msgfileurl_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgfileurl_;
  }
  if (msgdatecreated_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgdatecreated_;
  }
  if (msgdata_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgdata_;
  }
  if (msgfilesize_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgfilesize_;
  }
  if (extopts_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extopts_;
  }
  if (sendernickname_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendernickname_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void InstantMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const InstantMessage& InstantMessage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_SyncMsgResp_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_SyncMsgResp_2eproto();
#endif
  return *default_instance_;
}

InstantMessage* InstantMessage::default_instance_ = NULL;

InstantMessage* InstantMessage::New() const {
  return new InstantMessage;
}

void InstantMessage::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    version_ = GOOGLE_ULONGLONG(0);
    msgtype_ = 0u;
    if (has_msgid()) {
      if (msgid_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgid_->clear();
      }
    }
    if (has_msgcontent()) {
      if (msgcontent_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgcontent_->clear();
      }
    }
    if (has_msgsender()) {
      if (msgsender_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgsender_->clear();
      }
    }
    if (has_msgreceiver()) {
      if (msgreceiver_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgreceiver_->clear();
      }
    }
    if (has_msgdomain()) {
      if (msgdomain_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgdomain_->clear();
      }
    }
    if (has_msgfilename()) {
      if (msgfilename_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgfilename_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_msgfileurl()) {
      if (msgfileurl_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgfileurl_->clear();
      }
    }
    if (has_msgdatecreated()) {
      if (msgdatecreated_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgdatecreated_->clear();
      }
    }
    msgcompresslen_ = 0u;
    if (has_msgdata()) {
      if (msgdata_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgdata_->clear();
      }
    }
    mcmevent_ = 0u;
    if (has_msgfilesize()) {
      if (msgfilesize_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msgfilesize_->clear();
      }
    }
    if (has_extopts()) {
      if (extopts_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extopts_->clear();
      }
    }
    if (has_sendernickname()) {
      if (sendernickname_ != &::yuntongxun_google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sendernickname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool InstantMessage::MergePartialFromCodedStream(
    ::yuntongxun_google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::yuntongxun_google::protobuf::uint32 tag;
  ::yuntongxun_google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::yuntongxun_google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:InstantMessage)
  for (;;) {
    ::std::pair< ::yuntongxun_google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::yuntongxun_google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::yuntongxun_google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::yuntongxun_google::protobuf::uint64, ::yuntongxun_google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional uint32 msgType = 2;
      case 2: {
        if (tag == 16) {
         parse_msgType:
          DO_((::yuntongxun_google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::yuntongxun_google::protobuf::uint32, ::yuntongxun_google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
          set_has_msgtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msgId;
        break;
      }

      // optional string msgId = 3;
      case 3: {
        if (tag == 26) {
         parse_msgId:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msgContent;
        break;
      }

      // optional bytes msgContent = 4;
      case 4: {
        if (tag == 34) {
         parse_msgContent:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgcontent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msgSender;
        break;
      }

      // optional string msgSender = 5;
      case 5: {
        if (tag == 42) {
         parse_msgSender:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgsender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_msgReceiver;
        break;
      }

      // optional string msgReceiver = 6;
      case 6: {
        if (tag == 50) {
         parse_msgReceiver:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgreceiver()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_msgDomain;
        break;
      }

      // optional string msgDomain = 7;
      case 7: {
        if (tag == 58) {
         parse_msgDomain:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgdomain()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_msgFileName;
        break;
      }

      // optional string msgFileName = 8;
      case 8: {
        if (tag == 66) {
         parse_msgFileName:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgfilename()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_msgFileUrl;
        break;
      }

      // optional string msgFileUrl = 9;
      case 9: {
        if (tag == 74) {
         parse_msgFileUrl:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgfileurl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_msgDateCreated;
        break;
      }

      // optional string msgDateCreated = 10;
      case 10: {
        if (tag == 82) {
         parse_msgDateCreated:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgdatecreated()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_msgCompressLen;
        break;
      }

      // optional uint32 msgCompressLen = 11;
      case 11: {
        if (tag == 88) {
         parse_msgCompressLen:
          DO_((::yuntongxun_google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::yuntongxun_google::protobuf::uint32, ::yuntongxun_google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgcompresslen_)));
          set_has_msgcompresslen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_msgData;
        break;
      }

      // optional bytes msgData = 12;
      case 12: {
        if (tag == 98) {
         parse_msgData:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_mcmEvent;
        break;
      }

      // optional uint32 mcmEvent = 13;
      case 13: {
        if (tag == 104) {
         parse_mcmEvent:
          DO_((::yuntongxun_google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::yuntongxun_google::protobuf::uint32, ::yuntongxun_google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mcmevent_)));
          set_has_mcmevent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_msgFileSize;
        break;
      }

      // optional string msgFileSize = 14;
      case 14: {
        if (tag == 114) {
         parse_msgFileSize:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgfilesize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_extOpts;
        break;
      }

      // optional string extOpts = 15;
      case 15: {
        if (tag == 122) {
         parse_extOpts:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extopts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_senderNickName;
        break;
      }

      // optional string senderNickName = 16;
      case 16: {
        if (tag == 130) {
         parse_senderNickName:
          DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendernickname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::yuntongxun_google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::yuntongxun_google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::yuntongxun_google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InstantMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InstantMessage)
  return false;
#undef DO_
}

void InstantMessage::SerializeWithCachedSizes(
    ::yuntongxun_google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InstantMessage)
  // optional uint64 version = 1;
  if (has_version()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->version(), output);
  }

  // optional uint32 msgType = 2;
  if (has_msgtype()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgtype(), output);
  }

  // optional string msgId = 3;
  if (has_msgid()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msgid(), output);
  }

  // optional bytes msgContent = 4;
  if (has_msgcontent()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msgcontent(), output);
  }

  // optional string msgSender = 5;
  if (has_msgsender()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msgsender(), output);
  }

  // optional string msgReceiver = 6;
  if (has_msgreceiver()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msgreceiver(), output);
  }

  // optional string msgDomain = 7;
  if (has_msgdomain()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msgdomain(), output);
  }

  // optional string msgFileName = 8;
  if (has_msgfilename()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->msgfilename(), output);
  }

  // optional string msgFileUrl = 9;
  if (has_msgfileurl()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->msgfileurl(), output);
  }

  // optional string msgDateCreated = 10;
  if (has_msgdatecreated()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->msgdatecreated(), output);
  }

  // optional uint32 msgCompressLen = 11;
  if (has_msgcompresslen()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->msgcompresslen(), output);
  }

  // optional bytes msgData = 12;
  if (has_msgdata()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->msgdata(), output);
  }

  // optional uint32 mcmEvent = 13;
  if (has_mcmevent()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mcmevent(), output);
  }

  // optional string msgFileSize = 14;
  if (has_msgfilesize()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->msgfilesize(), output);
  }

  // optional string extOpts = 15;
  if (has_extopts()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->extopts(), output);
  }

  // optional string senderNickName = 16;
  if (has_sendernickname()) {
    ::yuntongxun_google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->sendernickname(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:InstantMessage)
}

int InstantMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version());
    }

    // optional uint32 msgType = 2;
    if (has_msgtype()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional string msgId = 3;
    if (has_msgid()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgid());
    }

    // optional bytes msgContent = 4;
    if (has_msgcontent()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::BytesSize(
          this->msgcontent());
    }

    // optional string msgSender = 5;
    if (has_msgsender()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgsender());
    }

    // optional string msgReceiver = 6;
    if (has_msgreceiver()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgreceiver());
    }

    // optional string msgDomain = 7;
    if (has_msgdomain()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgdomain());
    }

    // optional string msgFileName = 8;
    if (has_msgfilename()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgfilename());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string msgFileUrl = 9;
    if (has_msgfileurl()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgfileurl());
    }

    // optional string msgDateCreated = 10;
    if (has_msgdatecreated()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgdatecreated());
    }

    // optional uint32 msgCompressLen = 11;
    if (has_msgcompresslen()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgcompresslen());
    }

    // optional bytes msgData = 12;
    if (has_msgdata()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::BytesSize(
          this->msgdata());
    }

    // optional uint32 mcmEvent = 13;
    if (has_mcmevent()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mcmevent());
    }

    // optional string msgFileSize = 14;
    if (has_msgfilesize()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->msgfilesize());
    }

    // optional string extOpts = 15;
    if (has_extopts()) {
      total_size += 1 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->extopts());
    }

    // optional string senderNickName = 16;
    if (has_sendernickname()) {
      total_size += 2 +
        ::yuntongxun_google::protobuf::internal::WireFormatLite::StringSize(
          this->sendernickname());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstantMessage::CheckTypeAndMergeFrom(
    const ::yuntongxun_google::protobuf::MessageLite& from) {
  MergeFrom(*::yuntongxun_google::protobuf::down_cast<const InstantMessage*>(&from));
}

void InstantMessage::MergeFrom(const InstantMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_msgcontent()) {
      set_msgcontent(from.msgcontent());
    }
    if (from.has_msgsender()) {
      set_msgsender(from.msgsender());
    }
    if (from.has_msgreceiver()) {
      set_msgreceiver(from.msgreceiver());
    }
    if (from.has_msgdomain()) {
      set_msgdomain(from.msgdomain());
    }
    if (from.has_msgfilename()) {
      set_msgfilename(from.msgfilename());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_msgfileurl()) {
      set_msgfileurl(from.msgfileurl());
    }
    if (from.has_msgdatecreated()) {
      set_msgdatecreated(from.msgdatecreated());
    }
    if (from.has_msgcompresslen()) {
      set_msgcompresslen(from.msgcompresslen());
    }
    if (from.has_msgdata()) {
      set_msgdata(from.msgdata());
    }
    if (from.has_mcmevent()) {
      set_mcmevent(from.mcmevent());
    }
    if (from.has_msgfilesize()) {
      set_msgfilesize(from.msgfilesize());
    }
    if (from.has_extopts()) {
      set_extopts(from.extopts());
    }
    if (from.has_sendernickname()) {
      set_sendernickname(from.sendernickname());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void InstantMessage::CopyFrom(const InstantMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstantMessage::IsInitialized() const {

  return true;
}

void InstantMessage::Swap(InstantMessage* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(msgid_, other->msgid_);
    std::swap(msgcontent_, other->msgcontent_);
    std::swap(msgsender_, other->msgsender_);
    std::swap(msgreceiver_, other->msgreceiver_);
    std::swap(msgdomain_, other->msgdomain_);
    std::swap(msgfilename_, other->msgfilename_);
    std::swap(msgfileurl_, other->msgfileurl_);
    std::swap(msgdatecreated_, other->msgdatecreated_);
    std::swap(msgcompresslen_, other->msgcompresslen_);
    std::swap(msgdata_, other->msgdata_);
    std::swap(mcmevent_, other->mcmevent_);
    std::swap(msgfilesize_, other->msgfilesize_);
    std::swap(extopts_, other->extopts_);
    std::swap(sendernickname_, other->sendernickname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string InstantMessage::GetTypeName() const {
  return "InstantMessage";
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
